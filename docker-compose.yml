services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: myappuser
      POSTGRES_PASSWORD: Of6McICQcMzmwrw
      POSTGRES_DB: listings
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  api:
    build:
      context: ./api/src/RealEstateApi
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__Postgres: Host=db;Port=5432;Database=listings;Username=myappuser;Password=Of6McICQcMzmwrw
      ConnectionStrings__Redis: redis:6379
    ports:
      - "5000:5000"
    restart: always

  scraper:
    build: ./scraper
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgres://myappuser:Of6McICQcMzmwrw@db:5432/listings
      REDIS_URL: redis://redis:6379
    restart: always
    command: ["node", "queue.js"]

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:5000
    restart: always

volumes:
  db_data:
